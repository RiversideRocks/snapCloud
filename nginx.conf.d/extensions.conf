# These is an HTTP-only front end that serves the Snap! IDE.
# It served from 4 different paths to maintain compatibility.
# https requests are redirected to the http domain.
# TODO: This file really needs to be cleaned up....

server {
    listen 80;
    server_name extensions.snap.berkeley.edu;

    set $cloud_loc '<head>\n\t<meta name="snap-cloud-domain" location="https://snap.berkeley.edu">';

    # Unset HSTS header on extensions domain.
    add_header Strict-Trasnport-Security "";

    # The only thing that should be served here.
    location /snap/ {
        sub_filter <head> $cloud_loc;
        alias snap/;
    }

    location / {
        return 301 /snap/;
    }


    location ~ ^/snap$ {
        return 301 /snap/;
    }

    # These are important "legacy" routes that we need to maintain.
    # /run, /snapsource/, /snapsource/dev, /snapsource/stable
    location /run {
        return 301 /snap/;
    }

    location /snapsource {
        sub_filter <head> $cloud_loc;
        alias snap/;

        location /snapsource/dev {
            alias dev/;
        }

        location /snapsource/stable {
            # TODO: point to a "previous" install when avaiable.
            alias snap/;
        }
    }

    # Needed for LetsEncrypt certbot to authenticate
    # Note: This is mapped to snapCloud/html/.well-known/acme-challenge
    # This must be accessible over a non-ssl connection
    location ~ /.well-known/acme-challenge/ {
        auth_basic off; # needed for the staging environment.
        alias html/;
        default_type "text/plain";
        try_files $uri $uri/ =404;
        break;
    }
}

# Force https connections to be sent to http.
server {
    listen 443 ssl http2;
    server_name extensions.snap.berkeley.edu;

    # https is used so that pre-redirect the browser will not complain.
    # LetsEncrypt creates *.pem files by default.
    ssl_certificate     certs/snap.berkeley.edu/fullchain.pem;
    ssl_certificate_key certs/snap.berkeley.edu/privkey.pem;

    # Needed for LetsEncrypt certbot to authenticate
    # TODO: Should this be here?
    # Note: This is mapped to snapCloud/html/.well-known/acme-challenge
    # This must be accessible over a non-ssl connection
    location ~ /.well-known/acme-challenge/ {
        auth_basic off; # needed for the staging environment.
        alias html/;
        default_type "text/plain";
        try_files $uri $uri/ =404;
        break;
    }
    return 301 http://$host$request_uri;
}
